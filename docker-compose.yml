version: '3.8'

services:
  # Backend Service
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    ports:
      - "5000:5000"
    env_file:
      - ./backend/.env
    environment:
      - REDIS_URL=redis://redis:6379
    command: ["uvicorn", "app:app", "--host", "0.0.0.0", "--port", "5000", "--reload"]
    volumes:
      - ./backend:/app
      - ./database:/app/database
      - ./api:/app/api
    depends_on:
      - mongodb
      - postgres
      - redis

  # Frontend Service
  frontend:
    build: ./frontend
    ports:
      - "3000:80"
    environment:
      - API_HOST=backend
      - API_PORT=5000

  # Database Services
  mongodb:
    image: mongo:latest
    ports:
      - "27017:27017"
    environment:
      - MONGO_INITDB_DATABASE=my_database
      - MONGO_INITDB_ROOT_USERNAME=my_user
      - MONGO_INITDB_ROOT_PASSWORD=my_password

  postgres:
    image: postgres:15
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_DB=my_database
      - POSTGRES_USER=my_user
      - POSTGRES_PASSWORD=my_password

  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"

  # Selenium Grid
  selenium-hub:
    image: selenium/hub:latest
    container_name: selenium-hub
    ports:
      - "4444:4444"
    environment:
      GRID_MAX_SESSIONS: 10
      GRID_TIMEOUT: 300000

  node-chrome:
    image: selenium/node-chrome-debug:latest
    depends_on:
      - selenium-hub
    ports:
      - "5900:5900"
    environment:
      SELENIUM_HUB_HOST: selenium-hub
      SELENIUM_NODE_MAX_SESSIONS: 5
      START_XVFB: "true"
    volumes:
      - /dev/shm:/dev/shm

  node-firefox:
    image: selenium/node-firefox-debug:latest
    depends_on:
      - selenium-hub
    ports:
      - "5901:5900"
    environment:
      SELENIUM_HUB_HOST: selenium-hub
      SELENIUM_NODE_MAX_SESSIONS: 5
      START_XVFB: "true"
    volumes:
      - /dev/shm:/dev/shm

  # Allure Server
  allure:
    image: qameta/allure:2.13.8
    container_name: allure-server
    ports:
      - "8080:5050"
    environment:
      CHECK_RESULTS_EVERY_SECONDS: 1
      KEEP_HISTORY: "true"
      PROJECT_ID: "E2E_automation"
    volumes:
      - ./allure-results:/app/allure-results
      - ./allure-reports:/app/default-reports
      - ./allure-redirect.html:/app/static/index.html

  # E2E Tests
  e2e-tests:
    build:
      context: ./e2e-automation
      dockerfile: Dockerfile
    environment:
      - TEST_URL=http://frontend:80
      - EMAIL=test@example.com
      - PASSWORD=testpassword123
      - USER_NAME=Test User
      - API_KEY=test_api_key
      - DATABASE_URL=postgresql://my_user:my_password@postgres:5432/my_database
      - TELEGRAM_BOT_TOKEN=${TELEGRAM_BOT_TOKEN}
      - TELEGRAM_CHAT_ID=${TELEGRAM_CHAT_ID}
      - ALLURE_RESULTS_DIR=allure-results
      - ALLURE_REPORTS_DIR=allure-reports/latest
    volumes:
      - ./allure-results:/app/allure-results
      - ./allure-reports:/app/allure-reports
    depends_on:
      - frontend
      - backend
      - postgres
      - redis
    networks:
      - default
    command: >
      sh -c "
        echo 'üöÄ –ó–∞–ø—É—Å–∫ E2E —Ç–µ—Å—Ç–æ–≤...' &&
        pytest tests/ -v --alluredir=allure-results &&
        echo 'üìä –ì–µ–Ω–µ—Ä–∞—Ü–∏—è Allure –æ—Ç—á–µ—Ç–∞...' &&
        allure generate allure-results -o allure-reports/latest --clean &&
        echo 'üì± –û—Ç–ø—Ä–∞–≤–∫–∞ –æ—Ç—á–µ—Ç–∞ –≤ Telegram...' &&
        python3 ../scripts/telegram/send_final_report.py &&
        echo '‚úÖ E2E —Ç–µ—Å—Ç—ã –∑–∞–≤–µ—Ä—à–µ–Ω—ã!'
      "

  # API Tests
  api-tests:
    build:
      context: ./api-tests
      dockerfile: Dockerfile
    environment:
      - API_BASE_URL=http://backend:5000
      - API_KEY=test_api_key
      - TELEGRAM_BOT_TOKEN=${TELEGRAM_BOT_TOKEN}
      - TELEGRAM_CHAT_ID=${TELEGRAM_CHAT_ID}
    volumes:
      - ./allure-results:/app/allure-results
      - ./allure-reports:/app/allure-reports
    depends_on:
      - backend
    command: >
      sh -c "
        echo 'üöÄ –ó–∞–ø—É—Å–∫ API —Ç–µ—Å—Ç–æ–≤...' &&
        pytest tests/ -v --alluredir=allure-results &&
        echo 'üìä –ì–µ–Ω–µ—Ä–∞—Ü–∏—è Allure –æ—Ç—á–µ—Ç–∞...' &&
        allure generate allure-results -o allure-reports/latest --clean &&
        echo '‚úÖ API —Ç–µ—Å—Ç—ã –∑–∞–≤–µ—Ä—à–µ–Ω—ã!'
      "

  # Database Tests
  db-tests:
    build:
      context: ./db-tests
      dockerfile: Dockerfile
    environment:
      - DATABASE_URL=postgresql://my_user:my_password@postgres:5432/my_database
      - MONGO_URL=mongodb://my_user:my_password@mongodb:27017/my_database
      - TELEGRAM_BOT_TOKEN=${TELEGRAM_BOT_TOKEN}
      - TELEGRAM_CHAT_ID=${TELEGRAM_CHAT_ID}
    volumes:
      - ./allure-results:/app/allure-results
      - ./allure-reports:/app/allure-reports
    depends_on:
      - postgres
      - mongodb
    command: >
      sh -c "
        echo 'üöÄ –ó–∞–ø—É—Å–∫ DB —Ç–µ—Å—Ç–æ–≤...' &&
        pytest tests/ -v --alluredir=allure-results &&
        echo 'üìä –ì–µ–Ω–µ—Ä–∞—Ü–∏—è Allure –æ—Ç—á–µ—Ç–∞...' &&
        allure generate allure-results -o allure-reports/latest --clean &&
        echo '‚úÖ DB —Ç–µ—Å—Ç—ã –∑–∞–≤–µ—Ä—à–µ–Ω—ã!'
      "

# You can access:
# - Frontend: http://localhost:3000
# - Backend: http://localhost:5000
# - Allure Server: http://localhost:8080
# - Selenium Grid: http://localhost:4444