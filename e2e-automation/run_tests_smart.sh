#!/bin/bash

# –£–º–Ω—ã–π –∑–∞–ø—É—Å–∫ E2E —Ç–µ—Å—Ç–æ–≤ —Å –ø—Ä–æ–≤–µ—Ä–∫–æ–π Allure
echo "üöÄ Starting E2E tests..."

# –ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–æ–≤
python -m pytest tests/ --alluredir=/app/allure-results -s
TEST_EXIT_CODE=$?

echo "üìä Tests completed with exit code: $TEST_EXIT_CODE"

# –û–∂–∏–¥–∞–Ω–∏–µ –æ–±—Ä–∞–±–æ—Ç–∫–∏ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤ Allure
echo "‚è≥ Waiting for Allure to process results..."

# –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ Allure —Å–µ—Ä–≤–µ—Ä –¥–æ—Å—Ç—É–ø–µ–Ω
ALLURE_READY=false
for i in {1..30}; do
    if curl -s http://allure:5050/api/result > /dev/null 2>&1; then
        echo "‚úÖ Allure server is ready"
        ALLURE_READY=true
        break
    fi
    echo "‚è≥ Waiting for Allure server... ($i/30)"
    sleep 2
done

if [ "$ALLURE_READY" = false ]; then
    echo "‚ö†Ô∏è  Allure server not ready, but continuing..."
fi

# –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤
if [ -d "/app/allure-results" ] && [ "$(ls -A /app/allure-results)" ]; then
    echo "‚úÖ Allure results found, processing complete"
    
    # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤
    RESULT_COUNT=$(find /app/allure-results -name "*.json" | wc -l)
    echo "üìà Found $RESULT_COUNT test result files"
else
    echo "‚ö†Ô∏è  Warning: No Allure results found"
fi

# –õ–æ–≥–∏—Ä—É–µ–º —Ñ–∏–Ω–∞–ª—å–Ω—ã–π —Å—Ç–∞—Ç—É—Å
if [ $TEST_EXIT_CODE -eq 0 ]; then
    echo "üéâ All tests passed successfully!"
else
    echo "‚ùå Some tests failed. Check the logs above for details."
fi

echo "üèÅ Container will now exit with code: $TEST_EXIT_CODE"

# –í–æ–∑–≤—Ä–∞—â–∞–µ–º –∫–æ–¥ –≤—ã—Ö–æ–¥–∞ —Ç–µ—Å—Ç–æ–≤
exit $TEST_EXIT_CODE
