[pytest]  # Секция конфигурации Pytest

# Маркеры для отладки и управления тестами  # Комментарий о маркерах тестов
markers =  # Начало определения маркеров
    # Маркеры для отладки  # Комментарий о маркерах отладки
    debug: Tests requiring debugging  # Маркер для тестов требующих отладки
    fixme: Broken tests that need fixing  # Маркер для сломанных тестов требующих исправления
    skip: Tests to be skipped  # Маркер для тестов которые нужно пропустить
    xfail: Tests expected to fail  # Маркер для тестов которые ожидаемо падают
    flaky: Flaky tests that may fail occasionally  # Маркер для нестабильных тестов
    
    # Маркеры по приоритету  # Комментарий о маркерах приоритета
    critical: Critical path tests  # Маркер для критических тестов
    high: High priority tests  # Маркер для тестов высокого приоритета
    medium: Medium priority tests  # Маркер для тестов среднего приоритета
    low: Low priority tests  # Маркер для тестов низкого приоритета
    
    # Маркеры по типу  # Комментарий о маркерах типа тестов
    smoke: Smoke tests  # Маркер для smoke тестов
    regression: Regression tests  # Маркер для регрессионных тестов
    api: API tests  # Маркер для API тестов
    ui: UI tests  # Маркер для UI тестов
    database: Database tests  # Маркер для тестов базы данных
    performance: Performance tests  # Маркер для тестов производительности
    security: Security tests  # Маркер для тестов безопасности
    
    # Маркеры по модулям  # Комментарий о маркерах модулей
    auth: Authentication tests  # Маркер для тестов аутентификации
    ecommerce: E-commerce module tests  # Маркер для тестов e-commerce модуля
    social: Social network module tests  # Маркер для тестов социальной сети
    tasks: Task management module tests  # Маркер для тестов управления задачами
    content: Content management module tests  # Маркер для тестов управления контентом
    analytics: Analytics module tests  # Маркер для тестов аналитики
    
    # Маркеры по компонентам  # Комментарий о маркерах компонентов
    login: Login page tests  # Маркер для тестов страницы входа
    navigation: Navigation tests  # Маркер для тестов навигации
    forms: Form validation tests  # Маркер для тестов валидации форм
    modals: Modal window tests  # Маркер для тестов модальных окон
    charts: Chart and visualization tests  # Маркер для тестов графиков и визуализации

# Настройки выполнения  # Комментарий о настройках выполнения тестов
addopts =  # Начало дополнительных опций Pytest
    --strict-markers  # Строгая проверка маркеров тестов
    --strict-config  # Строгая проверка конфигурации
    --verbose  # Подробный вывод результатов тестов
    --tb=short  # Короткий формат traceback при ошибках
    --maxfail=5  # Максимальное количество падений перед остановкой
    --reruns=2  # Количество повторных запусков упавших тестов
    --reruns-delay=1  # Задержка между повторными запусками в секундах
    --alluredir=allure-results  # Папка для сохранения результатов Allure
    --screenshot_path=screenshots  # Папка для сохранения скриншотов
    --clean-alluredir  # Очистка папки Allure перед запуском
    -ra  # Показать краткий отчет о всех тестах

# Фильтры предупреждений  # Комментарий о фильтрах предупреждений
filterwarnings =  # Начало настройки фильтров предупреждений
    ignore::DeprecationWarning  # Игнорировать предупреждения об устаревших функциях
    ignore::PendingDeprecationWarning  # Игнорировать предупреждения о планируемых изменениях
    ignore::UserWarning:selenium.*  # Игнорировать пользовательские предупреждения Selenium

# Настройки логов  # Комментарий о настройках логирования
log_cli = true  # Включить логирование в консоль
log_cli_level = INFO  # Уровень логирования в консоль
log_cli_format = %(asctime)s [%(levelname)8s] %(name)s: %(message)s  # Формат логов в консоли
log_cli_date_format = %Y-%m-%d %H:%M:%S  # Формат даты в логах консоли

log_file = pytest.log  # Имя файла для логов
log_file_level = DEBUG  # Уровень логирования в файл
log_file_format = %(asctime)s [%(levelname)8s] %(filename)s:%(lineno)d: %(message)s  # Формат логов в файле
log_file_date_format = %Y-%m-%d %H:%M:%S  # Формат даты в логах файла

# Настройки для параллельного выполнения  # Комментарий о параллельном выполнении
# Для запуска в параллели: pytest -n auto  # Комментарий о команде автоматического параллельного запуска
# Для запуска конкретного количества процессов: pytest -n 4  # Комментарий о команде запуска с 4 процессами

# Настройки таймаутов  # Комментарий о настройках таймаутов
timeout = 300  # Таймаут выполнения теста в секундах
timeout_method = thread  # Метод обработки таймаута через отдельный поток

# Настройки для Allure  # Комментарий о настройках Allure
allure_report_dir = allure-results  # Папка для результатов Allure
allure_clean_results = true  # Очистка результатов Allure перед запуском

# Настройки для скриншотов  # Комментарий о настройках скриншотов
screenshot_path = screenshots  # Папка для сохранения скриншотов
screenshot_on_failure = true  # Создавать скриншоты при падении тестов
screenshot_on_success = false  # Не создавать скриншоты при успешном выполнении