#!/usr/bin/env python3
"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è —Å–∫—Ä–∏–Ω—à–æ—Ç–∞ –ª–æ–∫–∞–ª—å–Ω–æ–≥–æ Allure –æ—Ç—á–µ—Ç–∞
"""

import os
import time
from selenium import webdriver
from selenium.webdriver.chrome.options import Options
from selenium.webdriver.chrome.service import Service
from webdriver_manager.chrome import ChromeDriverManager
from pathlib import Path


def setup_chrome_driver():
    """–ù–∞—Å—Ç—Ä–æ–π–∫–∞ Chrome WebDriver –¥–ª—è —Å–∫—Ä–∏–Ω—à–æ—Ç–æ–≤"""
    chrome_options = Options()
    chrome_options.add_argument('--headless')
    chrome_options.add_argument('--no-sandbox')
    chrome_options.add_argument('--disable-dev-shm-usage')
    chrome_options.add_argument('--disable-gpu')
    chrome_options.add_argument('--window-size=1920,1080')  # –ë–æ–ª—å—à–æ–π —Ä–∞–∑–º–µ—Ä –¥–ª—è –ø–æ–ª–Ω–æ–≥–æ –æ—Ç—á–µ—Ç–∞
    chrome_options.add_argument('--disable-web-security')
    chrome_options.add_argument('--allow-running-insecure-content')
    chrome_options.add_argument('--force-device-scale-factor=1')
    chrome_options.add_argument('--high-dpi-support=1')
    chrome_options.add_argument('--disable-extensions')
    chrome_options.add_argument('--disable-plugins')
    
    try:
        service = Service(ChromeDriverManager().install())
        driver = webdriver.Chrome(service=service, options=chrome_options)
        return driver
    except Exception as e:
        print(f"–û—à–∏–±–∫–∞ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ Chrome WebDriver: {e}")
        return None


def take_local_allure_screenshot(allure_reports_dir, output_file):
    """–°–æ–∑–¥–∞–Ω–∏–µ —Å–∫—Ä–∏–Ω—à–æ—Ç–∞ –ª–æ–∫–∞–ª—å–Ω–æ–≥–æ Allure –æ—Ç—á–µ—Ç–∞"""
    driver = setup_chrome_driver()
    if not driver:
        return False
    
    try:
        # –ü—É—Ç—å –∫ –ª–æ–∫–∞–ª—å–Ω–æ–º—É HTML —Ñ–∞–π–ª—É
        index_file = Path(allure_reports_dir) / "index.html"
        if not index_file.exists():
            print(f"‚ùå –§–∞–π–ª index.html –Ω–µ –Ω–∞–π–¥–µ–Ω: {index_file}")
            return False
        
        # URL –ª–æ–∫–∞–ª—å–Ω–æ–≥–æ —Ñ–∞–π–ª–∞
        file_url = f"file://{index_file.absolute()}"
        print(f"üìä –û—Ç–∫—Ä—ã—Ç–∏–µ –ª–æ–∫–∞–ª—å–Ω–æ–≥–æ Allure –æ—Ç—á–µ—Ç–∞: {file_url}")
        
        # –ó–∞–≥—Ä—É–∑–∫–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—ã
        driver.get(file_url)
        
        # –û–∂–∏–¥–∞–Ω–∏–µ –∑–∞–≥—Ä—É–∑–∫–∏ —Å—Ç—Ä–∞–Ω–∏—Ü—ã
        time.sleep(10)
        
        # –ü—Ä–æ–∫—Ä—É—Ç–∫–∞ –≤ –Ω–∞—á–∞–ª–æ —Å—Ç—Ä–∞–Ω–∏—Ü—ã
        driver.execute_script("window.scrollTo(0, 0);")
        time.sleep(2)
        
        # –°–æ–∑–¥–∞–Ω–∏–µ —Å–∫—Ä–∏–Ω—à–æ—Ç–∞
        driver.save_screenshot(output_file)
        print(f"üì∏ –°–∫—Ä–∏–Ω—à–æ—Ç —Å–æ—Ö—Ä–∞–Ω–µ–Ω: {output_file}")
        return True
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è —Å–∫—Ä–∏–Ω—à–æ—Ç–∞: {e}")
        return False
    finally:
        driver.quit()


def main():
    """–û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è"""
    allure_reports_dir = os.getenv('ALLURE_REPORTS_DIR', 'allure-reports/latest')
    
    # –°–æ–∑–¥–∞–Ω–∏–µ –ø–∞–ø–∫–∏ –¥–ª—è —Å–∫—Ä–∏–Ω—à–æ—Ç–æ–≤
    screenshots_dir = Path(allure_reports_dir) / "screenshots"
    screenshots_dir.mkdir(exist_ok=True)
    
    # –°–æ–∑–¥–∞–Ω–∏–µ —Å–∫—Ä–∏–Ω—à–æ—Ç–∞
    screenshot_file = screenshots_dir / "allure_report_screenshot.png"
    success = take_local_allure_screenshot(allure_reports_dir, screenshot_file)
    
    if success:
        print(f"‚úÖ –°–∫—Ä–∏–Ω—à–æ—Ç –ª–æ–∫–∞–ª—å–Ω–æ–≥–æ Allure –æ—Ç—á–µ—Ç–∞ —Å–æ–∑–¥–∞–Ω: {screenshot_file}")
        return 0
    else:
        print("‚ùå –û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è —Å–∫—Ä–∏–Ω—à–æ—Ç–∞")
        return 1


if __name__ == "__main__":
    exit(main())
